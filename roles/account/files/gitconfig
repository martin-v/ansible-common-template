[merge]
	tool = meld
[push]
	default = simple
	recursesubmodules = check
[gui]
	warndetachedcommit = true

[alias]
	;  shortcuts
	a = add
	b = branch
	c = checkout
	d = diff
	l = log
	g = cola
	p = push
	s = status
	r = rebase

	f = fetch --prune --tags --all
	u = rebase origin/develop

	up = "!git fetch --all && git merge --ff-only && git rebase origin/develop && git push -f"

	; fancy graph of commit history
	graph = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

	; den the better/other stash:
	;  - use "--include-untracked" because a new file is also a change and "--all" is normally the wrong option, because ignore means ignore it
	;  - if something is in the index, normally there is a reason
	den = stash --include-untracked --keep-index
	denWithSubmodules = "!git den && git submodule foreach --recursive 'git den'"

	; shortcut for graphical diff with meld
	meld = difftool --tool=meld --dir-diff

	; shortcut to pull and update submodules to new revision
	pullAndUpdateSubmodules = "!f(){ git pull \"$@\" && git submodule update --init --recursive; }; f"

	; Update each submodule to remote head, configured in
	;  submodule.<name>.remote (default: origin)
	;  submodule.<name>.branch (default: master)
	pullSubmodules = submodule update --remote --rebase --recursive

	diffWithSubmodules = "!git diff && git submodule foreach --recursive 'git diff'"
	pushWithSubmodules = push --recurse-submodules=on-demand

[status]
	short = true
	branch = true
	submoduleSummary = true
[branch]
	autosetuprebase = always
[pull]
	rebase = true
[diff]
	submodule = log

[include]
	path = ~/.gitconfig.user
